{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acefr\\\\projects\\\\assignment-3\\\\src\\\\App.js\";\n/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n    // Update state's currentUser (userName) after \"Log In\" button is clicked\n    this.mockLogIn = logInInfo => {\n      const newUser = {\n        ...this.state.currentUser\n      };\n      newUser.userName = logInInfo.userName;\n      this.setState({\n        currentUser: newUser\n      });\n    };\n    this.addDebit = event => {\n      event.preventDefault();\n      const description = event.target.description.value;\n      const amount = parseFloat(event.target.amount.value); // Parse the amount as a float\n\n      const date = new Date();\n      const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n      const newDebit = {\n        description,\n        amount,\n        date: formattedDate\n      };\n      const newAccountBalance = (this.state.accountBalance - amount).toFixed(2);\n      const updatedDebitList = [...this.state.debitList, newDebit];\n      this.setState({\n        debitList: updatedDebitList,\n        accountBalance: newAccountBalance\n      });\n    };\n    this.addCredit = event => {\n      event.preventDefault();\n      const description = event.target.description.value;\n      const amount = parseFloat(event.target.amount.value); // Parse the amount as a float\n\n      const date = new Date();\n      const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n      const newCredit = {\n        description,\n        amount,\n        date: formattedDate\n      };\n      if (isNaN(amount)) {\n        alert('Please enter a valid numeric amount for the credit.');\n        return; // Exit the function\n      }\n\n      this.setState({\n        creditList: updatedDebitList,\n        accountBalance: newAccountBalance\n      });\n    };\n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99'\n      }\n    };\n  }\n  componentDidMount() {\n    fetch('https://johnnylaicode.github.io/api/credits.json').then(response => response.json()).then(creditData => {\n      this.setState({\n        creditList: creditData\n      });\n      const totalCredits = creditData.reduce((total, credit) => total + credit.amount, 0);\n      const newAccountBalance = (this.state.accountBalance + totalCredits).toFixed(2);\n\n      // Update the state with the new account balance\n      this.setState({\n        accountBalance: newAccountBalance\n      });\n    }).catch(error => {\n      console.error('Error fetching credits:', error);\n    });\n    fetch('https://johnnylaicode.github.io/api/debits.json').then(response => response.json()).then(debitData => {\n      // Update the state with the fetched debit data\n      this.setState({\n        debitList: debitData\n      });\n\n      // Calculate the total debit amount\n      const totalDebits = debitData.reduce((total, debit) => total + debit.amount, 0);\n\n      // Calculate the new account balance\n      const newAccountBalance = (this.state.accountBalance - totalDebits).toFixed(2);\n\n      // Update the state with the new account balance\n      this.setState({\n        accountBalance: newAccountBalance\n      });\n    }).catch(error => {\n      console.error('Error fetching debits:', error);\n    });\n  }\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => /*#__PURE__*/_jsxDEV(Home, {\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 34\n    }, this);\n    const UserProfileComponent = () => /*#__PURE__*/_jsxDEV(UserProfile, {\n      userName: this.state.currentUser.userName,\n      memberSince: this.state.currentUser.memberSince\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n    const LogInComponent = () => /*#__PURE__*/_jsxDEV(LogIn, {\n      user: this.state.currentUser,\n      mockLogIn: this.mockLogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 35\n    }, this);\n    const CreditsComponent = () => /*#__PURE__*/_jsxDEV(Credits, {\n      credits: this.state.creditList,\n      addCredit: this.addCredit,\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }, this);\n    const DebitsComponent = () => /*#__PURE__*/_jsxDEV(Debits, {\n      debits: this.state.debitList,\n      addDebit: this.addDebit,\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 36\n    }, this);\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return /*#__PURE__*/_jsxDEV(Router, {\n      basename: \"/assignment-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: HomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: UserProfileComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: LogInComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/credits\",\n          render: CreditsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/debits\",\n          render: DebitsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","Credits","Debits","jsxDEV","_jsxDEV","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","addDebit","event","preventDefault","description","target","value","amount","parseFloat","date","Date","formattedDate","getFullYear","getMonth","toString","padStart","getDate","newDebit","newAccountBalance","accountBalance","toFixed","updatedDebitList","debitList","addCredit","newCredit","isNaN","alert","creditList","memberSince","componentDidMount","fetch","then","response","json","creditData","totalCredits","reduce","total","credit","catch","error","console","debitData","totalDebits","debit","render","HomeComponent","fileName","_jsxFileName","lineNumber","columnNumber","UserProfileComponent","LogInComponent","user","CreditsComponent","credits","DebitsComponent","debits","basename","children","exact","path"],"sources":["C:/Users/acefr/projects/assignment-3/src/App.js"],"sourcesContent":["/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 0,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://johnnylaicode.github.io/api/credits.json')\r\n      .then((response) => response.json())\r\n      .then((creditData) => {\r\n        this.setState({ creditList: creditData });\r\n  \r\n        const totalCredits = creditData.reduce((total, credit) => total + credit.amount, 0);\r\n  \r\n        const newAccountBalance = (this.state.accountBalance + totalCredits).toFixed(2);\r\n  \r\n        // Update the state with the new account balance\r\n        this.setState({ accountBalance: newAccountBalance });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching credits:', error);\r\n      });\r\n\r\n    fetch('https://johnnylaicode.github.io/api/debits.json')\r\n      .then((response) => response.json())\r\n      .then((debitData) => {\r\n        // Update the state with the fetched debit data\r\n        this.setState({ debitList: debitData });\r\n  \r\n        // Calculate the total debit amount\r\n        const totalDebits = debitData.reduce((total, debit) => total + debit.amount, 0);\r\n  \r\n        // Calculate the new account balance\r\n        const newAccountBalance = (this.state.accountBalance - totalDebits).toFixed(2);\r\n  \r\n        // Update the state with the new account balance\r\n        this.setState({ accountBalance: newAccountBalance });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching debits:', error);\r\n      });\r\n  }\r\n  addDebit = (event) => {\r\n    event.preventDefault(); \r\n  \r\n    \r\n    const description = event.target.description.value;\r\n    const amount = parseFloat(event.target.amount.value); // Parse the amount as a float\r\n  \r\n   \r\n    const date = new Date();\r\n    const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\r\n  \r\n    const newDebit = {\r\n      description,\r\n      amount,\r\n      date: formattedDate,\r\n    };\r\n    const newAccountBalance = (this.state.accountBalance - amount).toFixed(2);\r\n    const updatedDebitList = [...this.state.debitList, newDebit];\r\n  \r\n  \r\n    this.setState({\r\n      debitList: updatedDebitList,\r\n      accountBalance: newAccountBalance\r\n    });\r\n  }\r\n\r\n  addCredit = (event) => {\r\n    event.preventDefault(); \r\n  \r\n    \r\n    const description = event.target.description.value;\r\n    const amount = parseFloat(event.target.amount.value); // Parse the amount as a float\r\n  \r\n   \r\n    const date = new Date();\r\n    const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\r\n  \r\n    const newCredit = {\r\n      description,\r\n      amount,\r\n      date: formattedDate,\r\n    };\r\n    if (isNaN(amount)) {\r\n      alert('Please enter a valid numeric amount for the credit.');\r\n      return; // Exit the function\r\n    }\r\n  \r\n  \r\n  \r\n    this.setState({\r\n      creditList: updatedDebitList,\r\n      accountBalance: newAccountBalance\r\n    });\r\n  }\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit ={this.addCredit} accountBalance ={this.state.accountBalance}/>) \r\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit ={this.addDebit} accountBalance ={this.state.accountBalance}/>) \r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/assignment-3\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}